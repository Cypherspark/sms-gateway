// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package dbgen

import (
	"context"
)

type Querier interface {
	ClaimQueued(ctx context.Context, limit int32) ([]string, error)
	ClaimQueuedLRS(ctx context.Context, arg ClaimQueuedLRSParams) ([]string, error)
	CreateUser(ctx context.Context, name string) (CreateUserRow, error)
	DebitIfEnough(ctx context.Context, arg DebitIfEnoughParams) (int64, error)
	GetBalance(ctx context.Context, id string) (int32, error)
	GetMessage(ctx context.Context, id string) (GetMessageRow, error)
	GetMessageByIdemKey(ctx context.Context, arg GetMessageByIdemKeyParams) (string, error)
	GetUser(ctx context.Context, id string) (GetUserRow, error)
	InsertMessage(ctx context.Context, arg InsertMessageParams) (string, error)
	ListMessages(ctx context.Context, arg ListMessagesParams) ([]ListMessagesRow, error)
	LoadMessageForSend(ctx context.Context, id string) (LoadMessageForSendRow, error)
	// Optional: explicit row lock if you need it elsewhere
	LockUser(ctx context.Context, id string) error
	MarkFailed(ctx context.Context, id string) error
	MarkFailedAndRefund(ctx context.Context, id string) error
	MarkSent(ctx context.Context, arg MarkSentParams) error
	RequeueWithBackoff(ctx context.Context, arg RequeueWithBackoffParams) error
	TopUp(ctx context.Context, arg TopUpParams) error
}

var _ Querier = (*Queries)(nil)
