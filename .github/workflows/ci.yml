name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GOFLAGS: ""

jobs:
  lint:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-

      - name: Install deps
        run: |
          go mod download
          go mod verify

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.4.0
          args: --timeout=5m --config=.golangci.yml

  unit:
    name: Unit tests (race + coverage)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-

      - name: Run unit tests
        run: |
          make test
      - name: Upload unit coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage.out

  integration:
    name: Integration tests (testcontainers)
    runs-on: ubuntu-latest
    needs: [unit, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-

      - name: Run integration tests
        run: |
          make test-integration

      - name: Upload integration coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-coverage
          path: coverage.out
